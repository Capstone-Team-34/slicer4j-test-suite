public class Actions.Action extends java.lang.Object
{
    public static boolean actionExecuted;
    public static EmailSystem.Client bob;
    public static EmailSystem.Client rjh;
    public static EmailSystem.Client chuck;
    public static java.util.List actionHistory;

    public void <init>()
    {
        Actions.Action this;

        this := @this: Actions.Action;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void bobKeyAdd__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyAdd_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    public static void bobKeyAdd__role__keys()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack4;
        int $stack5;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyAdd");

        $stack3 = <Actions.Action: EmailSystem.Client bob>;

        $stack4 = <Actions.Action: EmailSystem.Client rjh>;

        $stack2 = <Actions.Action: EmailSystem.Client rjh>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: int getPrivateKey()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addKeyringEntry(EmailSystem.Client,int)>($stack4, $stack5);

        staticinvoke <EmailSystem.Util: void prompt(java.lang.String)>("bob added rjhs key");

        return;
    }

    public static void bobKeyAdd()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void bobKeyAdd__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void bobKeyAdd__before__keys()>();

     label2:
        return;
    }

    public static void bobKeyAddChuck__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyAddChuck_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    public static void bobKeyAddChuck__role__keys()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack4;
        int $stack5;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyAddChuck");

        $stack3 = <Actions.Action: EmailSystem.Client bob>;

        $stack4 = <Actions.Action: EmailSystem.Client chuck>;

        $stack2 = <Actions.Action: EmailSystem.Client chuck>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: int getPrivateKey()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addKeyringEntry(EmailSystem.Client,int)>($stack4, $stack5);

        return;
    }

    public static void bobKeyAddChuck()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void bobKeyAddChuck__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void bobKeyAddChuck__before__keys()>();

     label2:
        return;
    }

    public static void bobKeyChange__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyChange_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    public static void bobKeyChange__role__keys()
    {
        EmailSystem.Client $stack2;
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobKeyChange");

        $stack2 = <Actions.Action: EmailSystem.Client bob>;

        staticinvoke <EmailSystem.Client: void generateKeyPair(EmailSystem.Client,int)>($stack2, 777);

        return;
    }

    public static void bobKeyChange()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void bobKeyChange__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void bobKeyChange__before__keys()>();

     label2:
        return;
    }

    public static void bobSetAddressBook__before__addressbook()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobSetAddressBook_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    public static void bobSetAddressBook__role__addressbook()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack6, $stack7;
        java.lang.String $stack5, $stack9;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobSetAddressBook");

        $stack3 = <Actions.Action: EmailSystem.Client bob>;

        $stack2 = <Actions.Action: EmailSystem.Client rjh>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: java.lang.String getName()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addAddressbookEntry(java.lang.String,java.lang.String)>("AliasForRJHandChuck", $stack5);

        $stack7 = <Actions.Action: EmailSystem.Client bob>;

        $stack6 = <Actions.Action: EmailSystem.Client chuck>;

        $stack9 = virtualinvoke $stack6.<EmailSystem.Client: java.lang.String getName()>();

        virtualinvoke $stack7.<EmailSystem.Client: void addAddressbookEntry(java.lang.String,java.lang.String)>("AliasForRJHandChuck", $stack9);

        return;
    }

    public static void bobSetAddressBook()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_ADDRESSBOOK___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void bobSetAddressBook__role__addressbook()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void bobSetAddressBook__before__addressbook()>();

     label2:
        return;
    }

    public static void bobToAlias__before__addressbook()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("bobToAlias");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    public static void bobToAlias__role__addressbook()
    {
        java.util.List $stack3, $stack5, $stack9;
        EmailSystem.Client $stack2, $stack7;
        boolean $stack4;

        $stack2 = <Actions.Action: EmailSystem.Client bob>;

        $stack3 = virtualinvoke $stack2.<EmailSystem.Client: java.util.List getAddressBookReceiversForAlias(java.lang.String)>("AliasForRJHandChuck");

        $stack4 = interfaceinvoke $stack3.<java.util.List: boolean isEmpty()>();

        if $stack4 == 0 goto label1;

        $stack9 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack9.<java.util.List: boolean add(java.lang.Object)>("AbortedBobToAlias");

        return;

     label1:
        $stack5 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>("bobToAlias");

        $stack7 = <Actions.Action: EmailSystem.Client bob>;

        staticinvoke <EmailSystem.Client: int sendEmail(EmailSystem.Client,java.lang.String,java.lang.String,java.lang.String)>($stack7, "AliasForRJHandChuck", "Subject", "Body");

        return;
    }

    public static void bobToAlias()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_ADDRESSBOOK___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void bobToAlias__role__addressbook()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void bobToAlias__before__addressbook()>();

     label2:
        return;
    }

    public static void bobToRjh()
    {
        java.util.List $stack2;
        EmailSystem.Client $stack4, $stack5;
        java.lang.String $stack6;

        $stack2 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>("bobToRjh");

        $stack5 = <Actions.Action: EmailSystem.Client bob>;

        $stack4 = <Actions.Action: EmailSystem.Client rjh>;

        $stack6 = virtualinvoke $stack4.<EmailSystem.Client: java.lang.String getName()>();

        staticinvoke <EmailSystem.Client: int sendEmail(EmailSystem.Client,java.lang.String,java.lang.String,java.lang.String)>($stack5, $stack6, "Subject", "Body");

        return;
    }

    static void chuckKeyAdd__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("chuckKeyAdd_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void chuckKeyAdd__role__keys()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack4;
        int $stack5;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("chuckKeyAdd");

        $stack3 = <Actions.Action: EmailSystem.Client chuck>;

        $stack4 = <Actions.Action: EmailSystem.Client bob>;

        $stack2 = <Actions.Action: EmailSystem.Client bob>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: int getPrivateKey()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addKeyringEntry(EmailSystem.Client,int)>($stack4, $stack5);

        return;
    }

    public static void chuckKeyAdd()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void chuckKeyAdd__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void chuckKeyAdd__before__keys()>();

     label2:
        return;
    }

    static void rjhDeletePrivateKey__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhDeletePrivateKey_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhDeletePrivateKey__role__keys()
    {
        EmailSystem.Client $stack2;
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhDeletePrivateKey");

        $stack2 = <Actions.Action: EmailSystem.Client rjh>;

        virtualinvoke $stack2.<EmailSystem.Client: void setPrivateKey(int)>(0);

        return;
    }

    public static void rjhDeletePrivateKey()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhDeletePrivateKey__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhDeletePrivateKey__before__keys()>();

     label2:
        return;
    }

    static void rjhEnableForwarding__before__forward()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhEnableForwarding_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhEnableForwarding__role__forward()
    {
        EmailSystem.Client $stack2, $stack3;
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhEnableForwarding");

        $stack3 = <Actions.Action: EmailSystem.Client rjh>;

        $stack2 = <Actions.Action: EmailSystem.Client chuck>;

        virtualinvoke $stack3.<EmailSystem.Client: void setForwardReceiver(EmailSystem.Client)>($stack2);

        return;
    }

    public static void rjhEnableForwarding()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_FORWARD___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhEnableForwarding__role__forward()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhEnableForwarding__before__forward()>();

     label2:
        return;
    }

    static void rjhKeyAdd__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyAdd_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhKeyAdd__role__keys()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack4;
        int $stack5;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyAdd");

        $stack3 = <Actions.Action: EmailSystem.Client rjh>;

        $stack4 = <Actions.Action: EmailSystem.Client bob>;

        $stack2 = <Actions.Action: EmailSystem.Client bob>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: int getPrivateKey()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addKeyringEntry(EmailSystem.Client,int)>($stack4, $stack5);

        return;
    }

    public static void rjhKeyAdd()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhKeyAdd__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhKeyAdd__before__keys()>();

     label2:
        return;
    }

    static void rjhKeyAddChuck__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyAddChuck_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhKeyAddChuck__role__keys()
    {
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack4;
        int $stack5;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyAddChuck");

        $stack3 = <Actions.Action: EmailSystem.Client rjh>;

        $stack4 = <Actions.Action: EmailSystem.Client chuck>;

        $stack2 = <Actions.Action: EmailSystem.Client chuck>;

        $stack5 = virtualinvoke $stack2.<EmailSystem.Client: int getPrivateKey()>();

        virtualinvoke $stack3.<EmailSystem.Client: void addKeyringEntry(EmailSystem.Client,int)>($stack4, $stack5);

        return;
    }

    public static void rjhKeyAddChuck()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhKeyAddChuck__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhKeyAddChuck__before__keys()>();

     label2:
        return;
    }

    static void rjhKeyChange__before__keys()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyChange_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhKeyChange__role__keys()
    {
        EmailSystem.Client $stack2;
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhKeyChange");

        $stack2 = <Actions.Action: EmailSystem.Client rjh>;

        staticinvoke <EmailSystem.Client: void generateKeyPair(EmailSystem.Client,int)>($stack2, 666);

        return;
    }

    public static void rjhKeyChange()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhKeyChange__role__keys()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhKeyChange__before__keys()>();

     label2:
        return;
    }

    static void rjhSetAutoRespond__before__autoresponder()
    {
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhSetAutoRespond_NOTIMPL");

        <Actions.Action: boolean actionExecuted> = 1;

        return;
    }

    static void rjhSetAutoRespond__role__autoresponder()
    {
        EmailSystem.Client $stack2;
        java.util.List $stack0;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("rjhSetAutoRespond");

        $stack2 = <Actions.Action: EmailSystem.Client rjh>;

        virtualinvoke $stack2.<EmailSystem.Client: void setAutoResponse(boolean)>(1);

        return;
    }

    public static void rjhSetAutoRespond()
    {
        boolean $stack0;

        $stack0 = staticinvoke <tests.TestCommand: boolean get_AUTORESPONDER___()>();

        if $stack0 == 0 goto label1;

        staticinvoke <Actions.Action: void rjhSetAutoRespond__role__autoresponder()>();

        goto label2;

     label1:
        staticinvoke <Actions.Action: void rjhSetAutoRespond__before__autoresponder()>();

     label2:
        return;
    }

    public static void rjhToBob()
    {
        java.util.List $stack2;
        EmailSystem.Client $stack4, $stack5;
        java.lang.String $stack6;

        $stack2 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>("rjhToBob");

        $stack5 = <Actions.Action: EmailSystem.Client rjh>;

        $stack4 = <Actions.Action: EmailSystem.Client bob>;

        $stack6 = virtualinvoke $stack4.<EmailSystem.Client: java.lang.String getName()>();

        staticinvoke <EmailSystem.Client: int sendEmail(EmailSystem.Client,java.lang.String,java.lang.String,java.lang.String)>($stack5, $stack6, "subject", "body");

        return;
    }

    public static void setup()
    {
        java.lang.StringBuilder $stack4, $stack5, $stack8, $stack9, $stack12, $stack13, $stack15, $stack17, $stack20, $stack21, $stack24, $stack25, $stack29, $stack30, $stack33, $stack34, $stack37, $stack38, $stack40, $stack42, $stack45, $stack46, $stack49, $stack50, $stack54, $stack55, $stack58, $stack59, $stack62, $stack63, $stack65, $stack67, $stack70, $stack71, $stack74, $stack75;
        java.lang.String $stack7, $stack14, $stack19, $stack26, $stack32, $stack39, $stack44, $stack51, $stack57, $stack64, $stack69, $stack76;
        java.util.List $stack0;
        EmailSystem.Client $stack2, $stack3, $stack6, $stack10, $stack18, $stack22, $stack27, $stack28, $stack31, $stack35, $stack43, $stack47, $stack52, $stack53, $stack56, $stack60, $stack68, $stack72;
        int $stack11, $stack23, $stack36, $stack48, $stack61, $stack73;
        java.io.PrintStream $stack16, $stack41, $stack66;

        $stack0 = <Actions.Action: java.util.List actionHistory>;

        interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>("setup");

        staticinvoke <EmailSystem.Client: void resetClients()>();

        $stack2 = staticinvoke <EmailSystem.Client: EmailSystem.Client createClient(java.lang.String)>("bob");

        <Actions.Action: EmailSystem.Client bob> = $stack2;

        $stack3 = <Actions.Action: EmailSystem.Client bob>;

        staticinvoke <Actions.Action: void setup_bob(EmailSystem.Client)>($stack3);

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bob: ");

        $stack6 = <Actions.Action: EmailSystem.Client bob>;

        $stack7 = virtualinvoke $stack6.<EmailSystem.Client: java.lang.String getName()>();

        $stack8 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack10 = <Actions.Action: EmailSystem.Client bob>;

        $stack11 = virtualinvoke $stack10.<EmailSystem.Client: int getId()>();

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <EmailSystem.Util: void prompt(java.lang.String)>($stack14);

        $stack16 = <java.lang.System: java.io.PrintStream out>;

        $stack15 = new java.lang.StringBuilder;

        specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bob: ");

        $stack18 = <Actions.Action: EmailSystem.Client bob>;

        $stack19 = virtualinvoke $stack18.<EmailSystem.Client: java.lang.String getName()>();

        $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack22 = <Actions.Action: EmailSystem.Client bob>;

        $stack23 = virtualinvoke $stack22.<EmailSystem.Client: int getId()>();

        $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack16.<java.io.PrintStream: void println(java.lang.String)>($stack26);

        $stack27 = staticinvoke <EmailSystem.Client: EmailSystem.Client createClient(java.lang.String)>("rjh");

        <Actions.Action: EmailSystem.Client rjh> = $stack27;

        $stack28 = <Actions.Action: EmailSystem.Client rjh>;

        staticinvoke <Actions.Action: void setup_rjh(EmailSystem.Client)>($stack28);

        $stack29 = new java.lang.StringBuilder;

        specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rjh: ");

        $stack31 = <Actions.Action: EmailSystem.Client rjh>;

        $stack32 = virtualinvoke $stack31.<EmailSystem.Client: java.lang.String getName()>();

        $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack35 = <Actions.Action: EmailSystem.Client rjh>;

        $stack36 = virtualinvoke $stack35.<EmailSystem.Client: int getId()>();

        $stack37 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack36);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <EmailSystem.Util: void prompt(java.lang.String)>($stack39);

        $stack41 = <java.lang.System: java.io.PrintStream out>;

        $stack40 = new java.lang.StringBuilder;

        specialinvoke $stack40.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rjh: ");

        $stack43 = <Actions.Action: EmailSystem.Client rjh>;

        $stack44 = virtualinvoke $stack43.<EmailSystem.Client: java.lang.String getName()>();

        $stack45 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44);

        $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack47 = <Actions.Action: EmailSystem.Client rjh>;

        $stack48 = virtualinvoke $stack47.<EmailSystem.Client: int getId()>();

        $stack49 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack48);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack41.<java.io.PrintStream: void println(java.lang.String)>($stack51);

        $stack52 = staticinvoke <EmailSystem.Client: EmailSystem.Client createClient(java.lang.String)>("chuck");

        <Actions.Action: EmailSystem.Client chuck> = $stack52;

        $stack53 = <Actions.Action: EmailSystem.Client chuck>;

        staticinvoke <Actions.Action: void setup_chuck(EmailSystem.Client)>($stack53);

        $stack54 = new java.lang.StringBuilder;

        specialinvoke $stack54.<java.lang.StringBuilder: void <init>()>();

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chuck: ");

        $stack56 = <Actions.Action: EmailSystem.Client chuck>;

        $stack57 = virtualinvoke $stack56.<EmailSystem.Client: java.lang.String getName()>();

        $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack60 = <Actions.Action: EmailSystem.Client chuck>;

        $stack61 = virtualinvoke $stack60.<EmailSystem.Client: int getId()>();

        $stack62 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack61);

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <EmailSystem.Util: void prompt(java.lang.String)>($stack64);

        $stack66 = <java.lang.System: java.io.PrintStream out>;

        $stack65 = new java.lang.StringBuilder;

        specialinvoke $stack65.<java.lang.StringBuilder: void <init>()>();

        $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("chuck: ");

        $stack68 = <Actions.Action: EmailSystem.Client chuck>;

        $stack69 = virtualinvoke $stack68.<EmailSystem.Client: java.lang.String getName()>();

        $stack70 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack69);

        $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(ID: ");

        $stack72 = <Actions.Action: EmailSystem.Client chuck>;

        $stack73 = virtualinvoke $stack72.<EmailSystem.Client: int getId()>();

        $stack74 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack73);

        $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack66.<java.io.PrintStream: void println(java.lang.String)>($stack76);

        return;
    }

    static void setup_bob__before__keys(EmailSystem.Client)
    {
        EmailSystem.Client bob;

        bob := @parameter0: EmailSystem.Client;

        return;
    }

    static void setup_bob__role__keys(EmailSystem.Client)
    {
        EmailSystem.Client bob;

        bob := @parameter0: EmailSystem.Client;

        virtualinvoke bob.<EmailSystem.Client: void setPrivateKey(int)>(123);

        return;
    }

    static void setup_bob(EmailSystem.Client)
    {
        EmailSystem.Client bob;
        boolean $stack1;

        bob := @parameter0: EmailSystem.Client;

        $stack1 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack1 == 0 goto label1;

        staticinvoke <Actions.Action: void setup_bob__role__keys(EmailSystem.Client)>(bob);

        goto label2;

     label1:
        staticinvoke <Actions.Action: void setup_bob__before__keys(EmailSystem.Client)>(bob);

     label2:
        return;
    }

    static void setup_chuck__before__keys(EmailSystem.Client)
    {
        EmailSystem.Client chuck;

        chuck := @parameter0: EmailSystem.Client;

        return;
    }

    static void setup_chuck__role__keys(EmailSystem.Client)
    {
        EmailSystem.Client chuck;

        chuck := @parameter0: EmailSystem.Client;

        virtualinvoke chuck.<EmailSystem.Client: void setPrivateKey(int)>(789);

        return;
    }

    static void setup_chuck(EmailSystem.Client)
    {
        EmailSystem.Client chuck;
        boolean $stack1;

        chuck := @parameter0: EmailSystem.Client;

        $stack1 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack1 == 0 goto label1;

        staticinvoke <Actions.Action: void setup_chuck__role__keys(EmailSystem.Client)>(chuck);

        goto label2;

     label1:
        staticinvoke <Actions.Action: void setup_chuck__before__keys(EmailSystem.Client)>(chuck);

     label2:
        return;
    }

    static void setup_rjh__before__keys(EmailSystem.Client)
    {
        EmailSystem.Client rjh;

        rjh := @parameter0: EmailSystem.Client;

        return;
    }

    static void setup_rjh__role__keys(EmailSystem.Client)
    {
        EmailSystem.Client rjh;

        rjh := @parameter0: EmailSystem.Client;

        virtualinvoke rjh.<EmailSystem.Client: void setPrivateKey(int)>(456);

        return;
    }

    static void setup_rjh(EmailSystem.Client)
    {
        EmailSystem.Client rjh;
        boolean $stack1;

        rjh := @parameter0: EmailSystem.Client;

        $stack1 = staticinvoke <tests.TestCommand: boolean get_KEYS___()>();

        if $stack1 == 0 goto label1;

        staticinvoke <Actions.Action: void setup_rjh__role__keys(EmailSystem.Client)>(rjh);

        goto label2;

     label1:
        staticinvoke <Actions.Action: void setup_rjh__before__keys(EmailSystem.Client)>(rjh);

     label2:
        return;
    }

    static void <clinit>()
    {
        java.util.ArrayList $stack0;

        <Actions.Action: boolean actionExecuted> = 0;

        $stack0 = new java.util.ArrayList;

        specialinvoke $stack0.<java.util.ArrayList: void <init>()>();

        <Actions.Action: java.util.List actionHistory> = $stack0;

        return;
    }
}
