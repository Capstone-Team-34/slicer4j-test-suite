public class tests.TestCommand extends java.lang.Object
{
    public static boolean BASE___;
    public static boolean KEYS___;
    public static boolean ENCRYPT___;
    public static boolean AUTORESPONDER___;
    public static boolean ADDRESSBOOK___;
    public static boolean SIGN___;
    public static boolean FORWARD___;
    public static boolean VERIFY___;
    public static boolean DECRYPT___;

    public void <init>()
    {
        tests.TestCommand this;

        this := @this: tests.TestCommand;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean get_BASE___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean BASE___>;

        return $stack0;
    }

    public static boolean get_KEYS___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean KEYS___>;

        return $stack0;
    }

    public static boolean get_ENCRYPT___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean ENCRYPT___>;

        return $stack0;
    }

    public static boolean get_AUTORESPONDER___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean AUTORESPONDER___>;

        return $stack0;
    }

    public static boolean get_ADDRESSBOOK___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean ADDRESSBOOK___>;

        return $stack0;
    }

    public static boolean get_SIGN___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean SIGN___>;

        return $stack0;
    }

    public static boolean get_FORWARD___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean FORWARD___>;

        return $stack0;
    }

    public static boolean get_VERIFY___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean VERIFY___>;

        return $stack0;
    }

    public static boolean get_DECRYPT___()
    {
        boolean $stack0;

        $stack0 = <tests.TestCommand: boolean DECRYPT___>;

        return $stack0;
    }
}
