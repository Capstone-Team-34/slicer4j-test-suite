
src/java/tests/XstreamTEST.java–
tests.XstreamTESTCLASS)
src/java/tests/XstreamTEST.java ("
inner classfalse*XstreamTEST2Y
tests.XstreamTEST.get_BASE___()DECLARATION)
src/java/tests/XstreamTEST.java (2c
)tests.XstreamTEST.get_TREE_STRUCTURE___()DECLARATION)
src/java/tests/XstreamTEST.java (2`
&tests.XstreamTEST.get_CLASS_ALIAS___()DECLARATION)
src/java/tests/XstreamTEST.java  "(2`
&tests.XstreamTEST.get_FIELD_ALIAS___()DECLARATION)
src/java/tests/XstreamTEST.java$ &(2_
%tests.XstreamTEST.get_OMIT_FIELD___()DECLARATION)
src/java/tests/XstreamTEST.java( *(2c
)tests.XstreamTEST.get_IMPLICIT_ARRAY___()DECLARATION)
src/java/tests/XstreamTEST.java, .(2_
%tests.XstreamTEST.get_ATTRIBUTES___()DECLARATION)
src/java/tests/XstreamTEST.java0 2(2f
,tests.XstreamTEST.get_BOOLEAN_CONVERTER___()DECLARATION)
src/java/tests/XstreamTEST.java4 6(2Z
 tests.XstreamTEST.main(String[])DECLARATION)
src/java/tests/XstreamTEST.java8 M(2W
tests.XstreamTEST?SCALE_CONSTDECLARATION)
src/java/tests/XstreamTEST.java (2^
$tests.XstreamTEST?FEATURE_MODEL_PATHDECLARATION)
src/java/tests/XstreamTEST.java (!2Z
 tests.XstreamTEST?EXECUTION_MODEDECLARATION)
src/java/tests/XstreamTEST.java (2U
tests.XstreamTEST?TEST_CASEDECLARATION)
src/java/tests/XstreamTEST.java ( 2U
tests.XstreamTEST?SINGLETONDECLARATION)
src/java/tests/XstreamTEST.java
 
(82S
tests.XstreamTEST?BASE___DECLARATION)
src/java/tests/XstreamTEST.java (2]
#tests.XstreamTEST?TREE_STRUCTURE___DECLARATION)
src/java/tests/XstreamTEST.java (!2Z
 tests.XstreamTEST?CLASS_ALIAS___DECLARATION)
src/java/tests/XstreamTEST.java (2Z
 tests.XstreamTEST?FIELD_ALIAS___DECLARATION)
src/java/tests/XstreamTEST.java (2Y
tests.XstreamTEST?OMIT_FIELD___DECLARATION)
src/java/tests/XstreamTEST.java (2]
#tests.XstreamTEST?IMPLICIT_ARRAY___DECLARATION)
src/java/tests/XstreamTEST.java (!2Y
tests.XstreamTEST?ATTRIBUTES___DECLARATION)
src/java/tests/XstreamTEST.java (2`
&tests.XstreamTEST?BOOLEAN_CONVERTER___DECLARATION)
src/java/tests/XstreamTEST.java ($2Q
tests.XstreamTEST?SCALEDECLARATION)
src/java/tests/XstreamTEST.java (¿
tests.XstreamTEST.get_BASE___()METHOD)
src/java/tests/XstreamTEST.java ("
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_BASE___2L
tests.XstreamTEST?BASE___CALL)
src/java/tests/XstreamTEST.java	 (2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java (ﬁ
)tests.XstreamTEST.get_TREE_STRUCTURE___()METHOD)
src/java/tests/XstreamTEST.java (%"
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_TREE_STRUCTURE___2V
#tests.XstreamTEST?TREE_STRUCTURE___CALL)
src/java/tests/XstreamTEST.java	 (2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java (’
&tests.XstreamTEST.get_CLASS_ALIAS___()METHOD)
src/java/tests/XstreamTEST.java   (""
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_CLASS_ALIAS___2S
 tests.XstreamTEST?CLASS_ALIAS___CALL)
src/java/tests/XstreamTEST.java!	 !(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java   (’
&tests.XstreamTEST.get_FIELD_ALIAS___()METHOD)
src/java/tests/XstreamTEST.java$ $(""
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_FIELD_ALIAS___2S
 tests.XstreamTEST?FIELD_ALIAS___CALL)
src/java/tests/XstreamTEST.java%	 %(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java$ $(“
%tests.XstreamTEST.get_OMIT_FIELD___()METHOD)
src/java/tests/XstreamTEST.java( ((!"
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_OMIT_FIELD___2R
tests.XstreamTEST?OMIT_FIELD___CALL)
src/java/tests/XstreamTEST.java)	 )(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java( ((ﬁ
)tests.XstreamTEST.get_IMPLICIT_ARRAY___()METHOD)
src/java/tests/XstreamTEST.java, ,(%"
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_IMPLICIT_ARRAY___2V
#tests.XstreamTEST?IMPLICIT_ARRAY___CALL)
src/java/tests/XstreamTEST.java-	 -(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java, ,(“
%tests.XstreamTEST.get_ATTRIBUTES___()METHOD)
src/java/tests/XstreamTEST.java0 0(!"
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_ATTRIBUTES___2R
tests.XstreamTEST?ATTRIBUTES___CALL)
src/java/tests/XstreamTEST.java1	 1(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java0 0(Á
,tests.XstreamTEST.get_BOOLEAN_CONVERTER___()METHOD)
src/java/tests/XstreamTEST.java4 4(("
staticfalse"
finalfalse"
access modifierpublic"
type boolean*get_BOOLEAN_CONVERTER___2Y
&tests.XstreamTEST?BOOLEAN_CONVERTER___CALL)
src/java/tests/XstreamTEST.java5	 5(2A
booleanRETURN_TYPE)
src/java/tests/XstreamTEST.java4 4(’	
 tests.XstreamTEST.main(String[])METHOD)
src/java/tests/XstreamTEST.java8 8("
statictrue"
finalfalse"
access modifierpublic"
type void*main2]
%tests.XstreamTEST.main(String[])!args	PARAMETER)
src/java/tests/XstreamTEST.java8 8(&2c
)tests.XstreamTEST.main(String[])?testCaseDECLARATION)
src/java/tests/XstreamTEST.java= =(72_
,java.lang.Integer.parseInt(java.lang.String)CALL)
src/java/tests/XstreamTEST.java= =(72_
,java.lang.Integer.parseInt(java.lang.String)CALL)
src/java/tests/XstreamTEST.java? ?($2X
%java.lang.Throwable.printStackTrace()CALL)
src/java/tests/XstreamTEST.javaK K(2b
/tests.XstreamTEST.main(java.lang.String[])!argsCALL)
src/java/tests/XstreamTEST.java=# =('2b
/tests.XstreamTEST.main(java.lang.String[])!argsCALL)
src/java/tests/XstreamTEST.java=( =(,2J
tests.XstreamTEST?SCALECALL)
src/java/tests/XstreamTEST.java? ?(2b
/tests.XstreamTEST.main(java.lang.String[])!argsCALL)
src/java/tests/XstreamTEST.java? ?( 2J
tests.XstreamTEST?SCALECALL)
src/java/tests/XstreamTEST.javaA' A(,2J
tests.XstreamTEST?SCALECALL)
src/java/tests/XstreamTEST.javaB( B(-2>
voidRETURN_TYPE)
src/java/tests/XstreamTEST.java8 8(™
%tests.XstreamTEST.main(String[])!args	PARAMETER)
src/java/tests/XstreamTEST.java8  8(&*args2E
java.lang.String[]TYPE)
src/java/tests/XstreamTEST.java8 8(&Ÿ
)tests.XstreamTEST.main(String[])?testCaseVARIABLE)
src/java/tests/XstreamTEST.java= =("
type int*testCase26
intTYPE)
src/java/tests/XstreamTEST.java= =(2_
,java.lang.Integer.parseInt(java.lang.String)CALL)
src/java/tests/XstreamTEST.java= =(72b
/tests.XstreamTEST.main(java.lang.String[])!argsCALL)
src/java/tests/XstreamTEST.java=# =('2b
/tests.XstreamTEST.main(java.lang.String[])!argsCALL)
src/java/tests/XstreamTEST.java=( =(,∑
tests.XstreamTEST?SCALE_CONSTVARIABLE)
src/java/tests/XstreamTEST.java ("
type String*SCALE_CONST2C
java.lang.StringTYPE)
src/java/tests/XstreamTEST.java (≈
$tests.XstreamTEST?FEATURE_MODEL_PATHVARIABLE)
src/java/tests/XstreamTEST.java (!"
type String*FEATURE_MODEL_PATH2C
java.lang.StringTYPE)
src/java/tests/XstreamTEST.java (Ω
 tests.XstreamTEST?EXECUTION_MODEVARIABLE)
src/java/tests/XstreamTEST.java ("
type String*EXECUTION_MODE2C
java.lang.StringTYPE)
src/java/tests/XstreamTEST.java (≥
tests.XstreamTEST?TEST_CASEVARIABLE)
src/java/tests/XstreamTEST.java ( "
type String*	TEST_CASE2C
java.lang.StringTYPE)
src/java/tests/XstreamTEST.java (ç
tests.XstreamTEST?SINGLETONVARIABLE)
src/java/tests/XstreamTEST.java
 
($"
type XstreamTEST*	SINGLETON2D
tests.XstreamTESTTYPE)
src/java/tests/XstreamTEST.java
 
(2R
tests.XstreamTEST.XstreamTEST()CALL)
src/java/tests/XstreamTEST.java
' 
(8ß
tests.XstreamTEST?BASE___VARIABLE)
src/java/tests/XstreamTEST.java ("
type boolean*BASE___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (ª
#tests.XstreamTEST?TREE_STRUCTURE___VARIABLE)
src/java/tests/XstreamTEST.java (!"
type boolean*TREE_STRUCTURE___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (µ
 tests.XstreamTEST?CLASS_ALIAS___VARIABLE)
src/java/tests/XstreamTEST.java ("
type boolean*CLASS_ALIAS___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (µ
 tests.XstreamTEST?FIELD_ALIAS___VARIABLE)
src/java/tests/XstreamTEST.java ("
type boolean*FIELD_ALIAS___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (≥
tests.XstreamTEST?OMIT_FIELD___VARIABLE)
src/java/tests/XstreamTEST.java ("
type boolean*OMIT_FIELD___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (ª
#tests.XstreamTEST?IMPLICIT_ARRAY___VARIABLE)
src/java/tests/XstreamTEST.java (!"
type boolean*IMPLICIT_ARRAY___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (≥
tests.XstreamTEST?ATTRIBUTES___VARIABLE)
src/java/tests/XstreamTEST.java ("
type boolean*ATTRIBUTES___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (¡
&tests.XstreamTEST?BOOLEAN_CONVERTER___VARIABLE)
src/java/tests/XstreamTEST.java ($"
type boolean*BOOLEAN_CONVERTER___2:
booleanTYPE)
src/java/tests/XstreamTEST.java (õ
tests.XstreamTEST?SCALEVARIABLE)
src/java/tests/XstreamTEST.java ("
type int*SCALE26
intTYPE)
src/java/tests/XstreamTEST.java (